{"version":3,"sources":["index.js"],"names":["faceRect","width","height","canvasEl","document","createElement","ctx","getContext","body","appendChild","loadImage","url","Promise","resolve","reject","image","src","onload","onerror","all","urlFace","urlCat","map","then","face","cat","catRect","naturalWidth","naturalHeight","drawImage","globalCompositeOperation","offset","rato","pictureRect","toBlob","file","buttonEl","textContent","download","href","window","URL","createObjectURL"],"mappings":";;;;;AAsBA,aArBA,IAAA,EAAA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,iBAoBA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wDAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAlBA,IAAMA,EAAW,CACbC,MAAO,IACPC,OAAQ,KAGNC,EAAWC,SAASC,cAAc,UACxCF,EAASF,MAAQD,EAASC,MAC1BE,EAASD,OAASF,EAASE,OAC3B,IAAMI,EAAMH,EAASI,WAAW,MAChCH,SAASI,KAAKC,YAAYN,GAE1B,IAAMO,EAAY,SAACC,GAAQ,OAAA,IAAIC,QAAQ,SAACC,EAASC,GACvCC,IAAAA,EAAQX,SAASC,cAAc,OACrCU,EAAMC,IAAML,EACZI,EAAME,OAAS,WAAMJ,OAAAA,EAAQE,IAC7BA,EAAMG,QAAUJ,KAGpBF,QAAQO,IACJ,CAACC,EAAD,QAAUC,EAAV,SAAkBC,IAAIZ,IACxBa,KAAK,SAAiB,GAAA,IAAA,EAAA,EAAA,EAAA,GAAfC,EAAe,EAAA,GAATC,EAAS,EAAA,GACdC,EACKD,EAAIE,aADTD,EAEMD,EAAIG,cAGhBtB,EAAIuB,UAAUL,EAAM,EAAG,EAAGA,EAAKG,aAAcH,EAAKI,eAClDtB,EAAIwB,yBAA2B,YACzBC,IAAAA,GACE,EADFA,GAEE,GAFFA,EAGI,IAEJC,EAAOhC,EAASE,OAASwB,EAAiBK,EAC1CE,EAAc,CAChBhC,MAAOyB,EAAgBM,EACvB9B,OAAQwB,EAAiBM,GAE7B1B,EAAIuB,UAAUJ,GAAMQ,EAAYhC,MAAQD,EAASC,QAAU,EAAI8B,EAAUA,EAAUE,EAAYhC,MAAOgC,EAAY/B,QAElHC,EAAS+B,OAAO,SAAAC,GACNC,IAAAA,EAAWhC,SAASC,cAAc,KACxC+B,EAASC,YAAc,WACvBD,EAASE,SAAW,kBACpBF,EAASG,KAAOC,OAAOC,IAAIC,gBAAgBP,GAC3C/B,SAASI,KAAKC,YAAY2B,IAC3B,YAAa","file":"test.cec9edce.map","sourceRoot":"..\\..\\test","sourcesContent":["\r\nimport urlFace from './face.png';\r\nimport urlCat from './lixiao.jpg';\r\n\r\nconst faceRect = {\r\n    width: 110,\r\n    height: 126\r\n};\r\n\r\nconst canvasEl = document.createElement('canvas');\r\ncanvasEl.width = faceRect.width;\r\ncanvasEl.height = faceRect.height;\r\nconst ctx = canvasEl.getContext('2d');\r\ndocument.body.appendChild(canvasEl);\r\n\r\nconst loadImage = (url) => new Promise((resolve, reject) => {\r\n    const image = document.createElement('img');\r\n    image.src = url;\r\n    image.onload = () => resolve(image);\r\n    image.onerror = reject;\r\n});\r\n\r\nPromise.all(\r\n    [urlFace, urlCat].map(loadImage)\r\n).then(([face, cat]) => {\r\n    const catRect = {\r\n        width: cat.naturalWidth,\r\n        height: cat.naturalHeight\r\n    };\r\n\r\n    ctx.drawImage(face, 0, 0, face.naturalWidth, face.naturalHeight);\r\n    ctx.globalCompositeOperation = 'source-in';\r\n    const offset = {\r\n        x: -2,\r\n        y: -32,\r\n        zoom: 1.7\r\n    };\r\n    const rato = faceRect.height / catRect.height * offset.zoom;\r\n    const pictureRect = {\r\n        width: catRect.width * rato,\r\n        height: catRect.height * rato\r\n    };\r\n    ctx.drawImage(cat, (pictureRect.width - faceRect.width) / -2 + offset.x, offset.y, pictureRect.width, pictureRect.height);\r\n\r\n    canvasEl.toBlob(file => {\r\n        const buttonEl = document.createElement('a');\r\n        buttonEl.textContent = 'download';\r\n        buttonEl.download = 'croped-face.png';\r\n        buttonEl.href = window.URL.createObjectURL(file);\r\n        document.body.appendChild(buttonEl);\r\n    }, 'image/png', 0.92);\r\n});\r\n\r\n"]}